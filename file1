from fastapi import FastAPI, Request
import os
from anthropic import Anthropic
import requests
from dotenv import load_dotenv

load_dotenv()

app = FastAPI()

# 環境変数から設定を読み込み
CHATWORK_API_TOKEN = os.getenv("CHATWORK_API_TOKEN")
ANTHROPIC_API_KEY = os.getenv("ANTHROPIC_API_KEY")
CHATWORK_ROOM_ID = os.getenv("CHATWORK_ROOM_ID")

anthropic = Anthropic(api_key=ANTHROPIC_API_KEY)

@app.post("/webhook")
async def handle_webhook(request: Request):
    try:
        data = await request.json()
        
        # Chatworkからのメッセージを取得
        message = data['webhook_event']['body']
        account_id = data['webhook_event']['account_id']
        
        # ボットからのメッセージは無視（無限ループを防ぐ）
        if str(account_id) == os.getenv("CHATWORK_BOT_ACCOUNT_ID"):
            return {"status": "success"}
        
        # Claudeに質問を送信
        response = anthropic.messages.create(
            model="claude-3-opus-20240229",
            max_tokens=1000,
            messages=[
                {"role": "user", "content": message}
            ]
        )
        
        # Claudeの返答をChatworkに送信
        send_to_chatwork(response.content)
        
        return {"status": "success"}
    except Exception as e:
        print(f"Error: {e}")
        return {"status": "error", "message": str(e)}

def send_to_chatwork(message):
    url = f"https://api.chatwork.com/v2/rooms/{CHATWORK_ROOM_ID}/messages"
    headers = {"X-ChatWorkToken": CHATWORK_API_TOKEN}
    data = {"body": message}
    requests.post(url, headers=headers, data=data)

# 動作確認用のエンドポイント
@app.get("/")
def read_root():
    return {"status": "running"}
